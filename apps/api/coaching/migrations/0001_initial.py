# Generated by Django 4.2.7 on 2025-10-18 16:18

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, help_text='Optional first name of the child', max_length=50, null=True, verbose_name='first name')),
                ('schooling_stage', models.CharField(choices=[('preK', 'Pre-kindergarten (0-6 ans)'), ('6-13', 'Elementary/Middle (6-13 ans)'), ('13-18', 'Secondary (13-18 ans)')], help_text='Current schooling stage of the child', max_length=10, verbose_name='schooling stage')),
                ('diagnosed_adhd', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('unknown', 'Unknown / Not sure')], default='unknown', help_text='Whether the child has been diagnosed with ADHD', max_length=10, verbose_name='diagnosed ADHD')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='children', to=settings.AUTH_USER_MODEL, verbose_name='parent')),
            ],
            options={
                'verbose_name': 'child',
                'verbose_name_plural': 'children',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TargetBehavior',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Short description of the target behavior', max_length=100, verbose_name='behavior name')),
                ('active', models.BooleanField(default=True, help_text='Whether this behavior is currently being tracked', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_behaviors', to='coaching.child', verbose_name='child')),
            ],
            options={
                'verbose_name': 'target behavior',
                'verbose_name_plural': 'target behaviors',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['child'], name='coaching_ta_child_i_ddb83a_idx'), models.Index(fields=['active'], name='coaching_ta_active_3d5e89_idx')],
            },
        ),
        migrations.CreateModel(
            name='Screener',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instrument', models.CharField(default='mini_adhd_v1', help_text='Name/version of the screening instrument used', max_length=50, verbose_name='instrument')),
                ('answers', models.JSONField(help_text='Responses to screening questions (JSON)', verbose_name='answers')),
                ('total_score', models.IntegerField(help_text='Sum of all question scores', validators=[django.core.validators.MinValueValidator(0)], verbose_name='total score')),
                ('zone', models.CharField(choices=[('vert', 'Green - Low concern'), ('orange', 'Orange - Moderate concern'), ('rouge', 'Red - High concern')], help_text='Risk zone: vert (<=10), orange (11-20), rouge (>20)', max_length=10, verbose_name='zone')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='screeners', to='coaching.child', verbose_name='child')),
            ],
            options={
                'verbose_name': 'screener',
                'verbose_name_plural': 'screeners',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['child'], name='coaching_sc_child_i_20c902_idx'), models.Index(fields=['zone'], name='coaching_sc_zone_11b090_idx'), models.Index(fields=['created_at'], name='coaching_sc_created_fc322a_idx')],
            },
        ),
        migrations.CreateModel(
            name='DailyCheckin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date of this check-in', verbose_name='date')),
                ('mood', models.IntegerField(help_text='Child mood on a scale of 1-5', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='mood')),
                ('behaviors', models.JSONField(default=list, help_text='List of behavior completions: [{behavior_id, done}, ...]', verbose_name='behaviors')),
                ('notes', models.TextField(blank=True, help_text='Optional notes from the parent', null=True, verbose_name='notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_checkins', to='coaching.child', verbose_name='child')),
            ],
            options={
                'verbose_name': 'daily check-in',
                'verbose_name_plural': 'daily check-ins',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['child', 'date'], name='coaching_da_child_i_53fb49_idx'), models.Index(fields=['date'], name='coaching_da_date_b7ca3d_idx')],
                'unique_together': {('child', 'date')},
            },
        ),
        migrations.AddIndex(
            model_name='child',
            index=models.Index(fields=['parent'], name='coaching_ch_parent__8f674c_idx'),
        ),
        migrations.AddIndex(
            model_name='child',
            index=models.Index(fields=['created_at'], name='coaching_ch_created_5efda4_idx'),
        ),
    ]
