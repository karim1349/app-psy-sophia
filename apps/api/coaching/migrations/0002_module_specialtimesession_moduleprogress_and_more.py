# Generated by Django 4.2.7 on 2025-10-19 12:02

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('coaching', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(help_text="Unique identifier for the module (e.g., 'special_time')", max_length=50, unique=True, verbose_name='key')),
                ('title', models.CharField(help_text='Display title of the module', max_length=100, verbose_name='title')),
                ('order_index', models.IntegerField(default=0, help_text='Order in which modules are presented', verbose_name='order index')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this module is available to users', verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'module',
                'verbose_name_plural': 'modules',
                'ordering': ['order_index', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='SpecialTimeSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(help_text='When the session occurred (auto now if not provided)', verbose_name='datetime')),
                ('duration_min', models.IntegerField(help_text='Duration of the session in minutes (5-60)', validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(60)], verbose_name='duration (minutes)')),
                ('activity', models.CharField(blank=True, help_text="What activity the child chose (e.g., 'Lego', 'Drawing')", max_length=200, verbose_name='activity')),
                ('child_enjoyed', models.BooleanField(help_text='Whether the child appeared to enjoy the session', verbose_name='child enjoyed')),
                ('notes', models.TextField(blank=True, help_text='Optional notes about the session', verbose_name='notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='special_time_sessions', to='coaching.child', verbose_name='child')),
            ],
            options={
                'verbose_name': 'special time session',
                'verbose_name_plural': 'special time sessions',
                'ordering': ['-datetime'],
            },
        ),
        migrations.CreateModel(
            name='ModuleProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('locked', 'Locked - prerequisites not met'), ('active', 'Active - currently working on this module'), ('passed', 'Passed - module completed successfully')], default='active', help_text='Current state of this module for this child', max_length=10, verbose_name='state')),
                ('counters', models.JSONField(default=dict, help_text='Module-specific counters (e.g., sessions_21d, liked_last6, goal_per_week)', verbose_name='counters')),
                ('passed_at', models.DateTimeField(blank=True, help_text='When the module was completed', null=True, verbose_name='passed at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='module_progress', to='coaching.child', verbose_name='child')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='child_progress', to='coaching.module', verbose_name='module')),
            ],
            options={
                'verbose_name': 'module progress',
                'verbose_name_plural': 'module progress',
                'ordering': ['module__order_index', '-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='module',
            index=models.Index(fields=['key'], name='coaching_mo_key_5a788d_idx'),
        ),
        migrations.AddIndex(
            model_name='module',
            index=models.Index(fields=['order_index'], name='coaching_mo_order_i_83b878_idx'),
        ),
        migrations.AddIndex(
            model_name='specialtimesession',
            index=models.Index(fields=['child', 'datetime'], name='coaching_sp_child_i_faa7e9_idx'),
        ),
        migrations.AddIndex(
            model_name='specialtimesession',
            index=models.Index(fields=['datetime'], name='coaching_sp_datetim_071000_idx'),
        ),
        migrations.AddIndex(
            model_name='moduleprogress',
            index=models.Index(fields=['child', 'state'], name='coaching_mo_child_i_c2351b_idx'),
        ),
        migrations.AddIndex(
            model_name='moduleprogress',
            index=models.Index(fields=['module'], name='coaching_mo_module__3862ce_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='moduleprogress',
            unique_together={('child', 'module')},
        ),
    ]
