# Generated by Django 4.2.7 on 2025-10-14 15:21

from decimal import Decimal

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DealCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        db_index=True,
                        help_text="Category name (e.g., Electronics, Fashion)",
                        max_length=100,
                        unique=True,
                        verbose_name="name",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL-friendly identifier",
                        max_length=100,
                        unique=True,
                        verbose_name="slug",
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Icon identifier for UI (e.g., 'laptop', 'shirt')",
                        max_length=50,
                        verbose_name="icon",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        help_text="Hex color code for UI theming (e.g., #FF5722)",
                        max_length=7,
                        verbose_name="color",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this category is active and visible",
                        verbose_name="active",
                    ),
                ),
            ],
            options={
                "verbose_name": "deal category",
                "verbose_name_plural": "deal categories",
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["name"], name="deals_dealc_name_9e4607_idx"),
                    models.Index(fields=["slug"], name="deals_dealc_slug_b81740_idx"),
                    models.Index(
                        fields=["is_active", "name"],
                        name="deals_dealc_is_acti_0c01b6_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Deal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "title",
                    models.CharField(
                        db_index=True,
                        help_text="Deal title (max 200 characters)",
                        max_length=200,
                        verbose_name="title",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Detailed description of the deal",
                        verbose_name="description",
                    ),
                ),
                (
                    "current_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Current deal price",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="current price",
                    ),
                ),
                (
                    "original_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Original price before discount (optional)",
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="original price",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[
                            ("MAD", "Moroccan Dirham"),
                            ("USD", "US Dollar"),
                            ("EUR", "Euro"),
                        ],
                        default="MAD",
                        help_text="Currency code",
                        max_length=3,
                        verbose_name="currency",
                    ),
                ),
                (
                    "merchant",
                    models.CharField(
                        db_index=True,
                        help_text="Merchant or store name",
                        max_length=100,
                        verbose_name="merchant",
                    ),
                ),
                (
                    "channel",
                    models.CharField(
                        choices=[("online", "Online"), ("in_store", "In Store")],
                        help_text="Where the deal is available",
                        max_length=10,
                        verbose_name="channel",
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="City (required for in-store deals)",
                        max_length=100,
                        verbose_name="city",
                    ),
                ),
                (
                    "url",
                    models.URLField(
                        blank=True,
                        help_text="Deal URL (required for online deals)",
                        verbose_name="URL",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="Deal image",
                        null=True,
                        upload_to="deals/images/",
                        verbose_name="image",
                    ),
                ),
                (
                    "proof_url",
                    models.URLField(
                        blank=True,
                        help_text="Additional proof URL (screenshot, etc.)",
                        verbose_name="proof URL",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("expired", "Expired"),
                            ("merged_into", "Merged Into Another"),
                            ("flagged", "Flagged"),
                        ],
                        db_index=True,
                        default="active",
                        help_text="Deal status",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        help_text="Whether this deal has been verified by moderators",
                        verbose_name="verified",
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True,
                        db_index=True,
                        help_text="When this deal expires (optional)",
                        null=True,
                        verbose_name="expires at",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        help_text="User who posted this deal",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deals",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="author",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        help_text="Deal category",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deals",
                        to="deals.dealcategory",
                        verbose_name="category",
                    ),
                ),
            ],
            options={
                "verbose_name": "deal",
                "verbose_name_plural": "deals",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "content",
                    models.TextField(
                        help_text="Comment content (max 500 characters)",
                        max_length=500,
                        verbose_name="content",
                    ),
                ),
                (
                    "is_edited",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this comment has been edited",
                        verbose_name="edited",
                    ),
                ),
                (
                    "deal",
                    models.ForeignKey(
                        help_text="Deal being commented on",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="deals.deal",
                        verbose_name="deal",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        help_text="Parent comment for threading (optional)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="deals.comment",
                        verbose_name="parent comment",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User posting the comment",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "comment",
                "verbose_name_plural": "comments",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="Vote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "vote_type",
                    models.CharField(
                        choices=[("up", "Upvote"), ("down", "Downvote")],
                        help_text="Type of vote (up or down)",
                        max_length=4,
                        verbose_name="vote type",
                    ),
                ),
                (
                    "reason",
                    models.CharField(
                        blank=True,
                        help_text="Optional reason for downvote",
                        max_length=100,
                        verbose_name="reason",
                    ),
                ),
                (
                    "deal",
                    models.ForeignKey(
                        help_text="Deal being voted on",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="votes",
                        to="deals.deal",
                        verbose_name="deal",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User casting the vote",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="votes",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "vote",
                "verbose_name_plural": "votes",
                "indexes": [
                    models.Index(
                        fields=["deal", "vote_type"],
                        name="deals_vote_deal_id_320d39_idx",
                    ),
                    models.Index(
                        fields=["user", "-created_at"],
                        name="deals_vote_user_id_6259b7_idx",
                    ),
                    models.Index(
                        fields=["deal", "-created_at"],
                        name="deals_vote_deal_id_ee0ec2_idx",
                    ),
                ],
                "unique_together": {("deal", "user")},
            },
        ),
        migrations.AddIndex(
            model_name="deal",
            index=models.Index(
                fields=["status", "-created_at"], name="deals_deal_status_ee4474_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="deal",
            index=models.Index(
                fields=["merchant", "-created_at"], name="deals_deal_merchan_5d64fa_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="deal",
            index=models.Index(
                fields=["category", "-created_at"], name="deals_deal_categor_06495c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="deal",
            index=models.Index(
                fields=["city", "-created_at"], name="deals_deal_city_f68bb9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="deal",
            index=models.Index(
                fields=["expires_at"], name="deals_deal_expires_c4d459_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="deal",
            index=models.Index(
                fields=["is_verified", "-created_at"],
                name="deals_deal_is_veri_4eef7d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="deal",
            index=models.Index(
                fields=["author", "-created_at"], name="deals_deal_author__059485_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="comment",
            index=models.Index(
                fields=["deal", "created_at"], name="deals_comme_deal_id_695b57_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="comment",
            index=models.Index(
                fields=["parent", "created_at"], name="deals_comme_parent__4f3a80_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="comment",
            index=models.Index(
                fields=["user", "-created_at"], name="deals_comme_user_id_519687_idx"
            ),
        ),
    ]
